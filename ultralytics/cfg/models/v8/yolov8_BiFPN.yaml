# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8sgai.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs


# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [ -1, 1, CoordAtt, [ ] ]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [ -1, 1, CoordAtt, [ ] ]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [ -1, 1, CoordAtt, [ ] ]
  - [-1, 1, SPPF, [1024, 5]]  # 9


# YOLOv8.0n head
head:
  - [5, 1, Conv, [256]]  # 10-P3/8  4
  - [8, 1, Conv, [256]]  # 11-P4/16 6
  - [12, 1, Conv, [256]]  # 12-P5/32 9

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 13 P5->P4
  - [[-1, 14], 1, Bi_FPN, []] # 14   11
  - [-1, 3, C2f, [256]] # 15-P4/16

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 16 P4->P3
  - [[-1, 13], 1, Bi_FPN, []] # 17   10
  - [-1, 3, C2f, [256]] # 18-P3/8

  - [1, 1, Conv, [256, 3, 2]] # 19 P2->P3
  - [[-1, 13, 21], 1, Bi_FPN, []] # 20  10 18
  - [-1, 3, C2f, [256]] # 21-P3/8

  - [-1, 1, Conv, [256, 3, 2]] # 22 P3->P4
  - [[-1, 14, 18], 1, Bi_FPN, []] # 23   11 15
  - [-1, 3, C2f, [512]] # 24-P4/16

  - [-1, 1, Conv, [256, 3, 2]] # 25 P4->P5
  - [[-1, 15], 1, Bi_FPN, []] # 26   12
  - [-1, 3, C2f, [1024]] # 27-P5/32

  - [[24, 27, 30], 1, Detect, [nc]]  # Detect(P3, P4, P5)  21  24  27

